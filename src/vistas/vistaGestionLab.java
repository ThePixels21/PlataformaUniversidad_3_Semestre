/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vistas;

import Controladores.ControladorVistaAdminLabs;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Estudiante;
import modelo.Herramienta;
import modelo.Laboratorio;
import modelo.OcupanteYPrestamo;
import modelo.Universidad;

/**
 *
 * @author Pixels
 */
public class vistaGestionLab extends javax.swing.JFrame {
    
    private Laboratorio lab;
    private ControladorVistaAdminLabs controlador;
    private vistaAdminLabs vistaAnterior;
    private int idHerramienta;
    private String user;

    /**
     * Creates new form panelGestionLab
     *
     * @param lab
     * @param controlador
     * @param vistaAnterior
     */
    public vistaGestionLab(Laboratorio lab, ControladorVistaAdminLabs controlador, vistaAdminLabs vistaAnterior) {
        initComponents();
        this.setLocationRelativeTo(null);
        this.lab = lab;
        this.controlador = controlador;
        lblCupoDisp.setText(Integer.toString(lab.obtenerCupoDisponible()));
        this.vistaAnterior = vistaAnterior;
        validarHabilitado();
        crearTablaEstudiantes();
        crearTablaHerramientas();
        setCola();
    }
    
    public void setCola() {
        lblCola.setText("En cola: " + lab.getQueue().getSize());
        if (lab.getQueue().getSize() > 0) {
            btnEliminarCola.setVisible(true);
            lblSiguienteCola.setText("Siguiente en cola: " + lab.getQueue().peek().getEstudiante().getNombre()
                    + " " + lab.getQueue().peek().getEstudiante().getApellido());
            lblSiguienteCola.setVisible(true);
        } else {
            btnEliminarCola.setVisible(false);
            lblSiguienteCola.setVisible(false);
        }
    }

    public Laboratorio getLab() {
        return lab;
    }
    
    private void validarHabilitado(){
        if(!lab.isHabilitado()){
            checkBoxHabilitado.setSelected(false);
            btnRegistrarOcupante.setEnabled(false);
            btnGestionarOcupante.setEnabled(false);
            btnRemoverOcupante.setEnabled(false);
            btnDevolverHerramientas.setEnabled(false);
            btnVaciarLaboratorio.setEnabled(false);
            btnDevolverHerramienta.setEnabled(false);
            txtDocumento.setEnabled(false);
        }else {
            btnRegistrarOcupante.setEnabled(true);
            btnGestionarOcupante.setEnabled(true);
            btnRemoverOcupante.setEnabled(true);
            btnDevolverHerramientas.setEnabled(true);
            btnVaciarLaboratorio.setEnabled(true);
            btnDevolverHerramienta.setEnabled(true);
            txtDocumento.setEnabled(true);
        }
    }
    
    public void crearTablaEstudiantes(){
        DefaultTableModel model = new DefaultTableModel();
        String[] columnas = new String[]{
            "Usuario", "Nombre","Apellido", "Documento", "Telefono", "Herramientas"
        };
        model.setColumnIdentifiers(columnas);
        for (int i = 0; i < lab.getOcupantes().getSize(); i++) {
            Estudiante estudiante = lab.getOcupantes().get(i).getEstudiante();
            model.addRow(new Object[]{
                estudiante.getUser(),
                estudiante.getNombre(),
                estudiante.getApellido(),
                estudiante.getDocumento(),
                estudiante.getTelefono(),
                lab.getOcupantes().get(i).getHerramientas().getSize()
            });
        }
        tableEstudiantes.setModel(model);
    }
    
    public void crearTablaHerramientas(){
        DefaultTableModel model = new DefaultTableModel();
        String[] columnas = new String[]{
            "id", "Nombre","Tipo"
        };
        model.setColumnIdentifiers(columnas);
        for (int i = 0; i < lab.obtenerCantidadHerramientas(); i++) {
            Herramienta herramienta = lab.obtenerHerramientaIndex(i);
            model.addRow(new Object[]{
                herramienta.getId(),
                herramienta.getNombre(),
                herramienta.getTipo(),
            });
        }
        tableHerramientas.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        checkBoxHabilitado = new javax.swing.JCheckBox();
        lblCupoDisp = new javax.swing.JLabel();
        btnRegistrarOcupante = new javax.swing.JButton();
        btnDevolverHerramientas = new javax.swing.JButton();
        btnVaciarLaboratorio = new javax.swing.JButton();
        btnVolver = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableHerramientas = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableEstudiantes = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnDevolverHerramienta = new javax.swing.JButton();
        btnRemoverOcupante = new javax.swing.JButton();
        btnGestionarOcupante = new javax.swing.JButton();
        lblCola = new javax.swing.JLabel();
        btnEliminarCola = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtDocumento = new javax.swing.JTextField();
        lblSiguienteCola = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setMaximumSize(new java.awt.Dimension(302, 374));
        jPanel1.setMinimumSize(new java.awt.Dimension(802, 374));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        jLabel2.setText("Ocupantes:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 10, -1, -1));

        checkBoxHabilitado.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        checkBoxHabilitado.setSelected(true);
        checkBoxHabilitado.setText("Habilitado");
        checkBoxHabilitado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkBoxHabilitadoMouseClicked(evt);
            }
        });
        jPanel1.add(checkBoxHabilitado, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, -1, -1));

        lblCupoDisp.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        lblCupoDisp.setText("0");
        jPanel1.add(lblCupoDisp, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 20, 50, -1));

        btnRegistrarOcupante.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        btnRegistrarOcupante.setText("Registrar ocupante");
        btnRegistrarOcupante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarOcupanteActionPerformed(evt);
            }
        });
        jPanel1.add(btnRegistrarOcupante, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, -1, -1));

        btnDevolverHerramientas.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        btnDevolverHerramientas.setText("Devolver todas las herramientas");
        btnDevolverHerramientas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDevolverHerramientasActionPerformed(evt);
            }
        });
        jPanel1.add(btnDevolverHerramientas, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 350, -1, -1));

        btnVaciarLaboratorio.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        btnVaciarLaboratorio.setText("Vaciar laboratorio");
        btnVaciarLaboratorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVaciarLaboratorioActionPerformed(evt);
            }
        });
        jPanel1.add(btnVaciarLaboratorio, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 390, -1, -1));

        btnVolver.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        btnVolver.setText("Volver");
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });
        jPanel1.add(btnVolver, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 470, -1, -1));

        tableHerramientas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableHerramientas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableHerramientasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableHerramientas);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 320, -1, 130));

        tableEstudiantes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableEstudiantes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableEstudiantesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tableEstudiantes);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 50, -1, 130));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        jLabel3.setText("Cupo disponible: ");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        jLabel4.setText("Herramientas:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 280, -1, -1));

        btnDevolverHerramienta.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        btnDevolverHerramienta.setText("Devolver herramienta");
        btnDevolverHerramienta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDevolverHerramientaActionPerformed(evt);
            }
        });
        jPanel1.add(btnDevolverHerramienta, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 460, -1, -1));

        btnRemoverOcupante.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        btnRemoverOcupante.setText("Remover ocupante");
        btnRemoverOcupante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverOcupanteActionPerformed(evt);
            }
        });
        jPanel1.add(btnRemoverOcupante, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 230, -1, -1));

        btnGestionarOcupante.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        btnGestionarOcupante.setText("Gestionar prestamo de ocupante");
        btnGestionarOcupante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGestionarOcupanteActionPerformed(evt);
            }
        });
        jPanel1.add(btnGestionarOcupante, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 190, -1, -1));

        lblCola.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        lblCola.setText("En cola:");
        jPanel1.add(lblCola, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, -1, -1));

        btnEliminarCola.setFont(new java.awt.Font("Times New Roman", 3, 12)); // NOI18N
        btnEliminarCola.setText("Eliminar cola");
        btnEliminarCola.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarColaActionPerformed(evt);
            }
        });
        jPanel1.add(btnEliminarCola, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, -1, -1));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel5.setText("Documento");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, -1, 30));

        txtDocumento.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        txtDocumento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDocumentoKeyPressed(evt);
            }
        });
        jPanel1.add(txtDocumento, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 120, 110, -1));

        lblSiguienteCola.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        lblSiguienteCola.setText("Siguiente en cola:");
        jPanel1.add(lblSiguienteCola, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 507, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void checkBoxHabilitadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkBoxHabilitadoMouseClicked
        // TODO add your handling code here:
        if (!checkBoxHabilitado.isSelected()) {
            int i = JOptionPane.showConfirmDialog(this, "¿Está seguro de deshabilitar el laboratorio? Perderá las herramientas y los estudiantes incluidos en el");
            if (i == 0) {
                String razon = JOptionPane.showInputDialog(this, "Ingrese una razón para deshabilitar el laboratorio");
                lab.vaciarLaboratorio();
                lab.setHabilitado(false);
                lab.setRazonDeshabilitado(razon);
                crearTablaHerramientas();
                crearTablaEstudiantes();
                validarHabilitado();
                setCola();
            } else {
                checkBoxHabilitado.setSelected(true);
            }
        } else {
            lab.setHabilitado(true);
            lab.setRazonDeshabilitado("");
            validarHabilitado();
            setCola();
        }
        Universidad.serializarLaboratorios();
    }//GEN-LAST:event_checkBoxHabilitadoMouseClicked

    private void btnRegistrarOcupanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarOcupanteActionPerformed
        // TODO add your handling code here:
        Estudiante aux = controlador.buscarEstudianteDoc(txtDocumento.getText());
        if (aux != null) {
            boolean validado = controlador.validarEstudianteLab(aux.getUser());
            if (validado) {
                    boolean registrado = lab.registrarOcupante(aux);
                    if (registrado) {
                        JOptionPane.showMessageDialog(this, "Ocupante registrado");
                        txtDocumento.setText("");
                        crearTablaEstudiantes();
                    } else {
                        JOptionPane.showMessageDialog(this, "El estudiante ha sido agregado a una lista de espera\n"
                                + "debido a que el laboratorio tiene su aforo lleno.");
                        setCola();
                        txtDocumento.setText("");
                    }
            } else {
                JOptionPane.showMessageDialog(this, "El estudiante ya se encuetra en un laboratorio");
                txtDocumento.setText("");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Estudiante no encontrado");
        }
        lblCupoDisp.setText(Integer.toString(lab.obtenerCupoDisponible()));
    }//GEN-LAST:event_btnRegistrarOcupanteActionPerformed

    private void btnDevolverHerramientasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDevolverHerramientasActionPerformed
        // TODO add your handling code here:
        int i = JOptionPane.showConfirmDialog(this, "¿Está seguro de devolver todas las herramientas prestadas en el laboratorio?");
        if (i == 0) {
            lab.devolverHerramientas();
            crearTablaEstudiantes();
            crearTablaHerramientas();
        }
    }//GEN-LAST:event_btnDevolverHerramientasActionPerformed

    private void btnVaciarLaboratorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVaciarLaboratorioActionPerformed
        // TODO add your handling code here:
        int i = JOptionPane.showConfirmDialog(this, "¿Está seguro de remover los estudiantes del laboratorio?");
        if (i == 0) {
            lab.vaciarLaboratorio();
            crearTablaEstudiantes();
            crearTablaHerramientas();
            setCola();
        }
    }//GEN-LAST:event_btnVaciarLaboratorioActionPerformed

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        // TODO add your handling code here:
        vistaAnterior.validarPosiciones();
        vistaAnterior.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnVolverActionPerformed

    private void btnDevolverHerramientaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDevolverHerramientaActionPerformed
        // TODO add your handling code here:
        Herramienta aux = lab.buscarHerramienta(idHerramienta);
        if (aux != null) {
            int i = JOptionPane.showConfirmDialog(this, "¿Está seguro de devolver la herramienta " + aux.getNombre() + "?");
            if (i == 0) {
                boolean aux2 = lab.devolverHerramienta(idHerramienta);
                if (aux2) {
                    JOptionPane.showMessageDialog(this, "La herramienta ha sido devuelta satisfactoriamente");
                    crearTablaHerramientas();
                    crearTablaEstudiantes();
                }else{
                    JOptionPane.showMessageDialog(this, "No se pudo devolver la herramienta");
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Por favor seleccione una herramienta en la tabla para devolverla");
        }
    }//GEN-LAST:event_btnDevolverHerramientaActionPerformed

    private void btnRemoverOcupanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverOcupanteActionPerformed
        // TODO add your handling code here:
        Estudiante estudiante = lab.buscarOcupanteUsuario(user);
        if(estudiante != null){
            int i = JOptionPane.showConfirmDialog(this, "¿Está seguro de remover el estudiante "+ estudiante.getNombre()+ "?");
            if(i == 0){
                boolean aux = lab.removerOcupante(estudiante.getUser());
                if(aux){
                    JOptionPane.showMessageDialog(this, "El estudiante ha sido removido del laboratorio");
                    crearTablaEstudiantes();
                    crearTablaHerramientas();
                    setCola();
                }
            }
        }else{
            JOptionPane.showMessageDialog(this, "Por favor seleccione un ocupante en la tabla para removerlo");
        }
    }//GEN-LAST:event_btnRemoverOcupanteActionPerformed

    private void tableHerramientasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableHerramientasMouseClicked
        // TODO add your handling code here:
        int seleccion = tableHerramientas.rowAtPoint(evt.getPoint());
        idHerramienta = Integer.parseInt(tableHerramientas.getValueAt(seleccion, 0).toString());
    }//GEN-LAST:event_tableHerramientasMouseClicked

    private void tableEstudiantesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableEstudiantesMouseClicked
        // TODO add your handling code here:
        int seleccion = tableEstudiantes.rowAtPoint(evt.getPoint());
        user = tableEstudiantes.getValueAt(seleccion, 0).toString();
    }//GEN-LAST:event_tableEstudiantesMouseClicked

    private void btnGestionarOcupanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGestionarOcupanteActionPerformed
        // TODO add your handling code here:
        OcupanteYPrestamo prestamo = lab.buscarPrestamo(user);
        if(prestamo != null){
            new vistaGestionarPrestamoOcupante(prestamo, lab, controlador, this).setVisible(true);
            this.dispose();
        }else{
            JOptionPane.showMessageDialog(this, "Por favor seleccione un ocupante en la tabla para ingresar al módulo");
        }
    }//GEN-LAST:event_btnGestionarOcupanteActionPerformed

    private void btnEliminarColaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarColaActionPerformed
        // TODO add your handling code here:
        lab.getQueue().removeAll();
        setCola();
    }//GEN-LAST:event_btnEliminarColaActionPerformed

    private void txtDocumentoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDocumentoKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            btnRegistrarOcupante.doClick();
        }
    }//GEN-LAST:event_txtDocumentoKeyPressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDevolverHerramienta;
    private javax.swing.JButton btnDevolverHerramientas;
    private javax.swing.JButton btnEliminarCola;
    private javax.swing.JButton btnGestionarOcupante;
    private javax.swing.JButton btnRegistrarOcupante;
    private javax.swing.JButton btnRemoverOcupante;
    private javax.swing.JButton btnVaciarLaboratorio;
    private javax.swing.JButton btnVolver;
    private javax.swing.JCheckBox checkBoxHabilitado;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblCola;
    private javax.swing.JLabel lblCupoDisp;
    private javax.swing.JLabel lblSiguienteCola;
    private javax.swing.JTable tableEstudiantes;
    private javax.swing.JTable tableHerramientas;
    private javax.swing.JTextField txtDocumento;
    // End of variables declaration//GEN-END:variables
}
